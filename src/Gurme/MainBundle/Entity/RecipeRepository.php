<?php

namespace Gurme\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RecipeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipeRepository extends EntityRepository
{
    public function retrieveRecipesWithPhotos($cal = 500)
    {
        return $this->createQueryBuilder('r')
            ->select('r')
            ->where('r.calories >= :start')
            ->andWhere('r.calories <= :end')
            ->setParameters(array('start' => $cal-50, 'end' => $cal+50))
            ->getQuery()
            ->execute();
    }

    public function getIngredients($id)
    {
        $ingredients = $this->getEntityManager()->getRepository('GurmeMainBundle:RecipeIngredient')
            ->createQueryBuilder('il')
            ->leftJoin('il.recipe','r')
            ->leftJoin('il.ingredient','i')
            ->leftJoin('il.unit','u')
            ->select('r.id rid','il.amount','u.main','i.name','il.note')
            ->where('r.id = :recipeId')
            ->setParameter('recipeId',$id)
            ->getQuery()
            ->getResult();

        for ($i = 0; $i < count($ingredients); $i++) {
            if (($ingredients[$i]['amount'] != '')&&($ingredients[$i]['amount'] > 1)) {
                $ingredients[$i]['main'] .= 's';
            }
        }

        return $ingredients;
    }

    /**
     * Search for recipes by calories
     *
     * @param $calories
     * @return array
     */
    public function searchByCalories($calories)
    {
        $dql = "SELECT r.id,r.name,r.calories,p.url
                FROM 'GurmeMainBundle:Recipe' r
                JOIN r.coverPhoto p
                WHERE r.calories < $calories
                ORDER BY r.calories";
        $recipes = $this->getEntityManager()->createQuery($dql)->getResult();

        return $recipes;
    }

    /**
     * Search for recipes by calories and ingredients
     *
     * @param $calories
     * @param $ingredients
     * @return array
     */
    public function searchByCaloriesAndIngredients($calories,$ingredients)
    {
        $dql = "SELECT DISTINCT r.id,r.name,r.calories,p.url
                FROM GurmeMainBundle:RecipeIngredient ri JOIN ri.recipe r
                JOIN r.coverPhoto p
                WHERE r.calories < $calories AND ri.ingredient IN (:ingredients)
                ORDER BY r.calories";

        $recipes = $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter('ingredients',$ingredients)
            ->getResult();

        return $recipes;
    }

    /**
     * Get recipes of one particular category
     *
     * @param $categoryId
     * @return array
     */
    public function searchByCategory($categoryId)
    {
        /** @var \Doctrine\ORM\EntityManager $em */
        $em = $this->getEntityManager();
        $dql = "SELECT r.id,r.name,r.calories,p.url
                FROM 'GurmeMainBundle:RecipeCategorie' rc
                JOIN rc.recipe r
                JOIN r.coverPhoto p
                WHERE rc.category = $categoryId
                ORDER BY r.calories";

        $recipes = $em->createQuery($dql)->getResult();

        return $recipes;
    }

    /**
     * Get ingredients that match the $query
     *
     * @param $query
     * @return array
     */
    public function searchIngredients($query)
    {
        $dql = "SELECT i.id,i.name
                FROM Gurme\MainBundle\Entity\Ingredient i
                WHERE i.name LIKE '%$query%'
                OR i.alias LIKE '%$query%'";
        return $this->getEntityManager()->createQuery($dql)->getResult();
    }

}
